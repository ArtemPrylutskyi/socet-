using System;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using System.Collections.Generic;

class ChatApp
{
    static void Main(string[] args)
    {
        Console.WriteLine("Виберіть режим: (s = сервер, c = клiєнт)");
        string choice = Console.ReadLine();
        if (choice.ToLower() == "s")
        {
            ChatServer.Start();
        }
        else
        {
            ChatClient.Start();
        }
    }
}
class ChatServer
{
    static TcpListener listener;
    static List<ClientHandler> clients = new List<ClientHandler>();
    static object lockObj = new object();

    public static void Start()
    {
        Console.WriteLine("=== Сервер чату ===");
        listener = new TcpListener(IPAddress.Any, 5000);
        listener.Start();
        Console.WriteLine("Сервер запущено на порту 5000...");

        while (true)
        {
            TcpClient tcpClient = listener.AcceptTcpClient();
            ClientHandler client = new ClientHandler(tcpClient);
            lock (lockObj) clients.Add(client);
            Thread clientThread = new Thread(client.Run);
            clientThread.Start();
        }
    }

    public static void Broadcast(string message, ClientHandler excludeClient = null)
    {
        lock (lockObj)
        {
            foreach (var client in clients)
            {
                if (client != excludeClient)
                {
                    client.Send(message);
                }
            }
        }
    }

    public static void Remove(ClientHandler client)
    {
        lock (lockObj) clients.Remove(client);
    }

    public static List<ClientHandler> GetClients()
    {
        lock (lockObj) return new List<ClientHandler>(clients);
    }
}

class ClientHandler
{
    TcpClient client;
    NetworkStream stream;
    public string Name { get; private set; }

    public ClientHandler(TcpClient tcpClient)
    {
        client = tcpClient;
        stream = client.GetStream();
    }

    public void Run()
    {
        try
        {
            byte[] buffer = new byte[1024];
            int count = stream.Read(buffer, 0, buffer.Length);
            Name = Encoding.UTF8.GetString(buffer, 0, count);

            Console.WriteLine($"[LOG] {Name} пiдключився.");
            ChatServer.Broadcast($"*** {Name} приєднався до чату", this);

            while (true)
            {
                count = stream.Read(buffer, 0, buffer.Length);
                if (count == 0) break;

                string msg = Encoding.UTF8.GetString(buffer, 0, count);

                if (msg == "/exit")
                {
                    break;
                }

            
                if (msg.StartsWith("@"))
                {
                    string[] parts = msg.Split(' ', 2);
                    if (parts.Length == 2)
                    {
                        string target = parts[0].Substring(1);
                        string text = parts[1];
                        string privateMsg = $"(Приватно від {Name}): {text}";
                        SendPrivate(target, privateMsg);
                        Console.WriteLine($"[LOG] {Name} -> @{target}: {text}");
                        continue;
                    }
                }

                Console.WriteLine($"[MSG] {Name}: {msg}");
                ChatServer.Broadcast($"{Name}: {msg}", this);
            }
        }
        catch { }
        finally
        {
            Console.WriteLine($"[LOG] {Name} відключився.");
            ChatServer.Broadcast($"*** {Name} покинув чат ***", this);
            ChatServer.Remove(this);
            stream.Close();
            client.Close();
        }
    }

    void SendPrivate(string targetName, string message)
    {
        foreach (var c in ChatServer.GetClients())
        {
            if (c.Name == targetName)
            {
                c.Send(message);
                return;
            }
        }
    }

    public void Send(string message)
    {
        try
        {
            byte[] data = Encoding.UTF8.GetBytes(message);
            stream.Write(data, 0, data.Length);
        }
        catch { }
    }
}


class ChatClient
{
    public static void Start()
    {
        Console.WriteLine("Введіть своє ім’я:");
        string name = Console.ReadLine();

        TcpClient client = new TcpClient("127.0.0.1", 5000);
        NetworkStream stream = client.GetStream();

        byte[] nameData = Encoding.UTF8.GetBytes(name);
        stream.Write(nameData, 0, nameData.Length);

        
        Thread receiveThread = new Thread(() =>
        {
            try
            {
                byte[] buffer = new byte[1024];
                while (true)
                {
                    int count = stream.Read(buffer, 0, buffer.Length);
                    if (count == 0) break;
                    string msg = Encoding.UTF8.GetString(buffer, 0, count);
                    Console.WriteLine(msg);
                }
            }
            catch { }
        });
        receiveThread.Start();

        while (true)
        {
            string msg = Console.ReadLine();
            byte[] data = Encoding.UTF8.GetBytes(msg);
            stream.Write(data, 0, data.Length);

            if (msg == "/exit")
                break;
        }

        stream.Close();
        client.Close();
    }
}
